// <auto-generated />
using Bank_Data_Web_Service.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bank_Data_Web_Service.Migrations
{
    [DbContext(typeof(DBManager))]
    [Migration("20231011110608_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("Bank_Data_DLL.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountNo")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Balance")
                        .HasColumnType("REAL");

                    b.Property<int>("HolderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HolderId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNo = 21,
                            Balance = 99999.0,
                            HolderId = 2
                        });
                });

            modelBuilder.Entity("Bank_Data_DLL.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Bank_Data_DLL.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("Phone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Picture")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "user1 address",
                            Email = "user1@email.com",
                            Name = "user1",
                            Password = "user1pass",
                            Phone = 710000001,
                            Picture = "user1 picture url"
                        },
                        new
                        {
                            Id = 2,
                            Address = "user2 address",
                            Email = "user2@email.com",
                            Name = "user2",
                            Password = "user2pass",
                            Phone = 710000002,
                            Picture = "user2 picture url"
                        },
                        new
                        {
                            Id = 3,
                            Address = "user3 address",
                            Email = "user3@email.com",
                            Name = "user3",
                            Password = "user3pass",
                            Phone = 710000003,
                            Picture = "user3 picture url"
                        });
                });

            modelBuilder.Entity("Bank_Data_DLL.Account", b =>
                {
                    b.HasOne("Bank_Data_DLL.User", "Holder")
                        .WithMany("Accounts")
                        .HasForeignKey("HolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Holder");
                });

            modelBuilder.Entity("Bank_Data_DLL.Transaction", b =>
                {
                    b.HasOne("Bank_Data_DLL.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Bank_Data_DLL.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Bank_Data_DLL.User", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
